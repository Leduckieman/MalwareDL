#MalwareDL version 1.0! Have fun my bois :)
import requests
import sys
import argparse
import json
import pyzipper
import os
import random
from pathlib import Path
Path(os.getcwd()+"\\Samples").mkdir(parents=True, exist_ok=True)

parser = argparse.ArgumentParser(description="Download random samples from MB")
parser.add_argument("-c", "--count", help="Amount of samples to download, default 100", nargs=1, type=int, default=100)
parser.add_argument("-o", "--output", help="Output directory. Defaults to %%current dir%%\\Samples", nargs=1, type=str, default=os.getcwd()+"\\Samples")
parser.add_argument("-y", "--yes-to-all", help="Skip confirmation. Should be used with scripts", required=False, default=False, action='store_true')
parser.add_argument("-u", "--unzip", help="Unzip the file contents. DON'T USE THIS ON YOUR HOST. When false, file password is 'infected'.", required=False, default=False, action='store_true')

args = parser.parse_args()

CHARSET = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
LINEMAXSIZE = 64 #hash size, in this case 64 since we're using sha256
PASSWORD = b'infected'
headers = { "API-KEY":"6c275ca0c0d9f5bbf1cd01cb42864feb" } #Should be hidden, but I can just click regen on the site.

scount = args.count

if (not args.yes_to_all):
    confirm = input("Confirm and download {} samples? [y/N] > ".format(scount))
    if confirm.lower() == "n":
        sys.exit()

#read the actual sha256 hashes from the file
def readLinesFromFile(file: str) -> list:
    lines = []
    with open(file, 'r') as f:
        tempLines = f.readlines()
        for line in tempLines:
            if len(line) == LINEMAXSIZE and not "#" in line: 
                lines.append(line)
            else:
                continue
    return lines
    
#generate random file name
def generateRandomName(length: int, charset: str) -> str:
    name = ""
    for i in range(length):
        name += random.choice(charset)
    return name

#now for the actual file download!
def downloadFile(hash: str):
    data = {
            "query": "get_file",
            "sha256_hash": hash,
        }

    response = requests.post("https://mb-api.abuse.ch/api/v1/", data=data, timeout=15, headers=headers, allow_redirects=True)

    if "file_not_found" in response.text:
        print("Internal error, code 0x01") 
        sys.exit()
    else:
        cd = os.getcwd()
        
        name = generateRandomName(8, CHARSET)
        filename = cd+"\\Samples\\"+name+".zip"
        open(filename, "wb").write(response.content)

        if(args.unzip == True):  
            with pyzipper.AESZipFile(name+".zip") as zf:
                zf.pwd = ZIP_PASSWORD
                my_secrets = zf.extractall(".")  
                print("Sample \""+filename+"\" downloaded and unpacked.")
        else:
            print("Sample \""+filename+"\" downloaded.")
            
#And now, stitch it all together
hashes = readLinesFromFile(os.getcwd()+"\\full_sha256.txt")
for i in range(scount):
    hash = hashes[0]
    